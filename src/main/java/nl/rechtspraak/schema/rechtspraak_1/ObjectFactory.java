//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.09.27 at 04:08:31 PM BST 
//


package nl.rechtspraak.schema.rechtspraak_1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the nl.rechtspraak.schema.rechtspraak_1 package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Alt_QNAME = new QName("http://www.rechtspraak.nl/schema/rechtspraak-1.0", "alt");
    private final static QName _Nr_QNAME = new QName("http://www.rechtspraak.nl/schema/rechtspraak-1.0", "nr");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nl.rechtspraak.schema.rechtspraak_1
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Inhoudsindicatie }
     */
    public Inhoudsindicatie createInhoudsindicatie() {
        return new Inhoudsindicatie();
    }

    /**
     * Create an instance of {@link Uitspraak }
     */
    public Uitspraak createUitspraak() {
        return new Uitspraak();
    }

    /**
     * Create an instance of {@link Conclusie }
     */
    public Conclusie createConclusie() {
        return new Conclusie();
    }

    /**
     * Create an instance of {@link Informaltable }
     */
    public Informaltable createInformaltable() {
        return new Informaltable();
    }

    /**
     * Create an instance of {@link Tbody }
     */
    public Tbody createTbody() {
        return new Tbody();
    }

    /**
     * Create an instance of {@link Orderedlist }
     */
    public Orderedlist createOrderedlist() {
        return new Orderedlist();
    }

    /**
     * Create an instance of {@link UitspraakInfo }
     */
    public UitspraakInfo createUitspraakInfo() {
        return new UitspraakInfo();
    }

    /**
     * Create an instance of {@link Section }
     */
    public Section createSection() {
        return new Section();
    }

    /**
     * Create an instance of {@link Parablock }
     */
    public Parablock createParablock() {
        return new Parablock();
    }

    /**
     * Create an instance of {@link Title }
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link Bridgehead }
     */
    public Bridgehead createBridgehead() {
        return new Bridgehead();
    }

    /**
     * Create an instance of {@link Mediaobject }
     */
    public Mediaobject createMediaobject() {
        return new Mediaobject();
    }

    /**
     * Create an instance of {@link Listitem }
     */
    public Listitem createListitem() {
        return new Listitem();
    }

    /**
     * Create an instance of {@link ConclusieInfo }
     */
    public ConclusieInfo createConclusieInfo() {
        return new ConclusieInfo();
    }

    /**
     * Create an instance of {@link Para }
     */
    public Para createPara() {
        return new Para();
    }

    /**
     * Create an instance of {@link Tgroup }
     */
    public Tgroup createTgroup() {
        return new Tgroup();
    }

    /**
     * Create an instance of {@link Emphasis }
     */
    public Emphasis createEmphasis() {
        return new Emphasis();
    }

    /**
     * Create an instance of {@link Inlinemediaobject }
     */
    public Inlinemediaobject createInlinemediaobject() {
        return new Inlinemediaobject();
    }

    /**
     * Create an instance of {@link Row }
     */
    public Row createRow() {
        return new Row();
    }

    /**
     * Create an instance of {@link FootnoteRef }
     */
    public FootnoteRef createFootnoteRef() {
        return new FootnoteRef();
    }

    /**
     * Create an instance of {@link Colspec }
     */
    public Colspec createColspec() {
        return new Colspec();
    }

    /**
     * Create an instance of {@link Imagedata }
     */
    public Imagedata createImagedata() {
        return new Imagedata();
    }

    /**
     * Create an instance of {@link Footnote }
     */
    public Footnote createFootnote() {
        return new Footnote();
    }

    /**
     * Create an instance of {@link Paragroup }
     */
    public Paragroup createParagroup() {
        return new Paragroup();
    }

    /**
     * Create an instance of {@link Entry }
     */
    public Entry createEntry() {
        return new Entry();
    }

    /**
     * Create an instance of {@link Imageobject }
     */
    public Imageobject createImageobject() {
        return new Imageobject();
    }

    /**
     * Create an instance of {@link Itemizedlist }
     */
    public Itemizedlist createItemizedlist() {
        return new Itemizedlist();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "http://www.rechtspraak.nl/schema/rechtspraak-1.0", name = "alt")
    public JAXBElement<String> createAlt(String value) {
        return new JAXBElement<>(_Alt_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "http://www.rechtspraak.nl/schema/rechtspraak-1.0", name = "nr")
    public JAXBElement<String> createNr(String value) {
        return new JAXBElement<>(_Nr_QNAME, String.class, null, value);
    }

}
